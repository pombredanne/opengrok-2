#!/bin/bash
# vim:ts=2:sw=2:et:ft=sh:
# %%FOO%% are substituted during install
CHARM_ROOT=%%PWD%%
export CHARM_ROOT

grok_src=/var/opengrok/src
grok_data=/var/opengrok/data
grok_etc=/var/opengrok/etc
# XXX consider adjusting JVM heap size dynamically to cloud instance
grok_java_heap=-Xmx2048m
grok_ctags=/usr/bin/ctags

# check fails if var is unset or empty
if [ -n "${JUJU_AGENT_SOCKET:+x}" ]
then
  LOGIT='juju-log'
else
  LOGIT='logger -p user.info -t opengrok'
fi

opengrok_install_cronjob() {
  local job=/etc/cron.daily/opengrok
  ${LOGIT} "Installing daily index update cron job"
  rm -f ${job}
  tee ${job} << EOF
#!/bin/sh
# We run synchronously here so that the runtime of this infrequent
# cronjob is accounted for.
initctl emit opengrok-index
EOF
  chmod +x ${job}
}

opengrok_install_upstart_index_job() {
  local job=/etc/init/opengrok-index.conf
  ${LOGIT} "Installing opengrok-index upstart task"
  rm -f ${job}
  tee ${job} << EOF
# opengrok-index - Kickoff index service for opengrok source code xref
#
# This helper runs the opengrok indexing service.
#
# Recommened invocation: initctl emit --no-wait opengrok-index
#
# As indexing can take anywhere from 5 mins to several hours depending
# on how many projects are present and their size.

description "Update opengrok indexes"

start on opengrok-index

task

script
  %%PWD%%/scripts/opengrok_update_configuration
  %%PWD%%/scripts/opengrok_update_index
end script

# vim:ts=4:sw=4:et:
EOF
}

opengrok_update_index() {
  local args='-v -S -r on'
  ${LOGIT} "Opengrok indexing (this could take a while)..."

  for (( i=1; i <= 3; i++ ))
  do
    ${LOGIT} "Opengrok index pass ${i} starting"

    # For the sake debugging and determinism, we're invoking this
    # directly.
    cd /opt/opengrok/bin && java ${grok_java_heap} \
      -Djava.util.logging.config.file=/var/opengrok/logging.properties \
      -jar /opt/opengrok/bin/../lib/opengrok.jar \
       ${args} \
      -c ${grok_ctags} \
      -a on \
      -R ${grok_etc}/configuration.xml \
      -U localhost:2424 \
      -s ${grok_src} \
      -d ${grok_data}

    if (( $? == 0 ))
    then
      ${LOGIT} "Opengrok index pass ${i} complete"
      break
    else
      ${LOGIT} "Opengrok index pass ${i} failed, check syslog for java \
        'Out of memory' process being killed."
      # Can't hurt, really have no other recourse here
      sleep 10s
    fi
  done
}

opengrok_update_project_configuration() {
  # We need to ensure that history building is unset
  # -P updates the project list and -n ensures that no indexing occurs
  local args=-Pn

  rm -f ${grok_etc}/configuration.xml

  cd /opt/opengrok/bin && java ${grok_java_heap} \
    -Djava.util.logging.config.file=/var/opengrok/logging.properties \
    -jar /opt/opengrok/bin/../lib/opengrok.jar \
     ${args} \
    -c ${grok_ctags} \
    -a on \
    -W ${grok_etc}/configuration.xml \
    -U localhost:2424 \
    -s ${grok_src} \
    -d ${grok_data}
}
