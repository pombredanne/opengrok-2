#!/bin/bash
# vim:ts=2:sw=2:et:filetype=sh:
set -eu #-x for verbose logging to juju debug-log

CWD=$(dirname $0)

DEPLOY=/opt/opengrok-charm
TMPL=${CHARM_DIR}/templates
INC=${DEPLOY}/inc
BIN=${DEPLOY}/bin

install_tomcat6() {
  apt-get -qq update
  apt-get -qqy install tomcat6
}

install_debug_helper() {
  # make vim configuration sane for onsite editing
  cat > /etc/vim/vimrc.local <<\EOF
set bg=dark
if exists("+modelines") 
     " the following is required because of SuSE's paranoid /etc/vimrc 
     " and to force 'modeline' on even for root in Vim 7.0.237 and later 
     set modeline modelines=5 
     " the following disables a dangerous modeline in one helpfile 
     if has ('autocmd') 
         au BufReadPost ada.txt setl nomodeline ft=help 
     endif 
endif
EOF
}

compile_templates() {
  juju-log "Compiling templates"

  cheetah compile  ${TMPL}/configuration_xml.tmpl
  chmod a+x ${TMPL}/*.py
}

install_opengrok() {
  # For reference
  local upstream_sha256=b49e795f3421117e0e1176bf786335c3aba70ad67ad77fb2800f9f4d6ae246c5
  local upstream_grok_jar=http://hub.opensolaris.org/bin/download/Project+opengrok/files/opengrok-0.11.1.tar.gz

  # Workaround http://defect.opensolaris.org/bz/show_bug.cgi?id=19245
  local tarball_sha256=8ae34f00bd2bf672b7cea2868d9de5fafe7c00ba03c869bad6996dcaaa0e522d
  local grok_jar=http://people.canonical.com/~ppetraki/charms/opengrok/opengrok-0.11.1+ubuntu1.tar.gz

  local tarball=$(echo ${grok_jar} | perl -ne '@F = split("/",$_); print("$F[-1]");')
  local basedir=$(echo ${tarball}  | perl -ne '@F = split(".tar.gz",$_); print("$F[0]");')

  juju-log "Preparing to install OpenGrok"
  add-apt-repository -y ppa:charmers/charm-helpers
  apt-get -qq update
  apt-get -qqy install exuberant-ctags bzr git charm-helper-sh python-cheetah

  rm -rf ${DEPLOY} ${INC} ${BIN} && mkdir -p ${DEPLOY} ${INC} ${BIN}
  compile_templates

  # install and load shared definitions
  install -m 755 -o root -g root ${TMPL}/common.tmpl ${INC}/common
  . ${INC}/common

  # loading helper library
  . /usr/share/charm-helper/sh/net.sh

  install_debug_helper

  juju-log "Installing ${basedir} JAR from tarball"
  local templocation=$(ch_get_file ${grok_jar} ${tarball_sha256})
  tar xzf ${templocation} -C ${DEPLOY}
  chown -R root:root ${DEPLOY}

  # update symlink to the latest
  ln -nsf ${DEPLOY}/${basedir} ${DEPLOY}/opengrok

  local grok_src=$(config-get grok_src)
  local grok_data=$(config-get grok_data)

  juju-log "Creating opengrok src and data store"
  mkdir -p ${grok_src}

  if [[ "$(basename $0)" != "upgrade-charm" ]]
  then
    rm -rf ${grok_data} && mkdir -p ${grok_data}
  else
    juju-log "preserving ${grok_data} on charm-upgrade"
  fi

  if [[ "$(basename $0)" != "upgrade-charm" ]]
  then
    rm -rf ${grok_etc} && mkdir -p ${grok_etc}
  else
    juju-log "preserving ${grok_etc} on charm-upgrade"
  fi

  juju-log "Deploying opengrok war to servlet root"
  # deploy script scans for common servlets and had hardcoded paths
  # should you use tomcat7 this will probably not work.
  rm -rf /var/lib/tomcat6/webapps/source
  cd ${DEPLOY}/opengrok/bin && ./OpenGrok deploy

  # Lay down baseline configuration
  ${TMPL}/configuration_xml.py > ${grok_etc}/configuration.xml

  # install helper scripts
  install -m 755 -o root -g root ${TMPL}/opengrok_update_configuration.tmpl \
    ${BIN}/opengrok_update_configuration
  install -m 755 -o root -g root ${TMPL}/opengrok_update_index.tmpl \
    ${BIN}/opengrok_update_index

  opengrok_configure_logging

  opengrok_update_project_configuration

  opengrok_install_upstart_index_job

  # The cron job runs the upstart job synchronously
  opengrok_install_cronjob
}

start_opengrok() {
  juju-log "Starting opengrok service"
  service tomcat6 status || service tomcat6 start
  open-port 8080/tcp
}

stop_opengrok() {
  juju-log "Stopping opengrok service"
  service tomcat6 stop
  close-port 8080/tcp
}

restart_opengrok() {
  # This is a bit overkill, but it doesn't hurt either
  juju-log "Restarting opengrok service"
  service tomcat6 status && service tomcat6 restart || service tomcat6 start
}

# Actual processing
COMMAND=$(basename $0)

case $COMMAND in
  install)
    install_tomcat6
    install_opengrok
    restart_opengrok
    hostname=$(unit-get public-address)
    juju-log "Opengrok installed, expose service and visit http://${hostname}:8080/source"
    ;;
  start)
    start_opengrok
    ;;
  stop)
    stop_opengrok
    ;;
  config-changed)
    hooks/py-config-changed
    ;;
  upgrade-charm)
    install_opengrok
    restart_opengrok 
    juju-log "Opengrok upgraded"
    ;;
  website-relation-joined)
    relation-set port=8080 hostname=$(unit-get private-address)
    ;;
  *)
    juju-log "Command not recognized"
esac

exit 0
