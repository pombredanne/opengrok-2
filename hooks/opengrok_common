#!/bin/bash
# vim:ts=2:sw=2:et:filetype=sh:
set -eu #-x for verbose logging to juju debug-log

CWD=$(dirname $0)

TMPL=${CWD}/../templates
INC=${CWD}/../inc
SCRIPTS=${CWD}/../scripts

install_tomcat6() {
  apt-get -qq update
  apt-get -qqy install tomcat6
}

compile_templates() {
  juju-log "Compiling templates"
  sed -e "s|%%PWD%%|${PWD}|g" ${TMPL}/common.tmpl > ${INC}/common
  sed -e "s|%%PWD%%|${PWD}|g" ${TMPL}/opengrok_update_configuration.tmpl \
    > ${SCRIPTS}/opengrok_update_configuration 
  sed -e "s|%%PWD%%|${PWD}|g" ${TMPL}/opengrok_update_index.tmpl \
    > ${SCRIPTS}/opengrok_update_index

  chmod +x ${INC}/common \
           ${SCRIPTS}/opengrok_update_configuration \
           ${SCRIPTS}/opengrok_update_index
}

install_opengrok() {
  # For reference
  local upstream_sha256=b49e795f3421117e0e1176bf786335c3aba70ad67ad77fb2800f9f4d6ae246c5
  local upstream_grok_jar=http://hub.opensolaris.org/bin/download/Project+opengrok/files/opengrok-0.11.1.tar.gz

  # Workaround http://defect.opensolaris.org/bz/show_bug.cgi?id=19245
  local tarball_sha256=8ae34f00bd2bf672b7cea2868d9de5fafe7c00ba03c869bad6996dcaaa0e522d
  local grok_jar=http://people.canonical.com/~ppetraki/charms/opengrok/opengrok-0.11.1+ubuntu1.tar.gz

  local tarball=$(echo ${grok_jar} | perl -ne '@F = split("/",$_); print("$F[-1]");')
  local basedir=$(echo ${tarball}  | perl -ne '@F = split(".tar.gz",$_); print("$F[0]");')

  juju-log "Preparing to install OpenGrok"
  add-apt-repository -y ppa:charmers/charm-helpers
  apt-get -qq update
  apt-get -qqy install exuberant-ctags bzr charm-helper-sh

  # shared definitions
  . inc/common

  # loading helper library
  . /usr/share/charm-helper/sh/net.sh

  juju-log "Installing ${basedir} JAR from tarball"
  local templocation=$(ch_get_file ${grok_jar} ${tarball_sha256})
  rm -rf /opt/opengrok/${basedir}
  tar xzf ${templocation} -C /opt

  # update symlink to the latest
  ln -sf /opt/${basedir} /opt/opengrok

  juju-log "Creating opengrok src and data store"
  mkdir -p ${grok_src}

  if [[ "$(basename $0)" != "upgrade-charm" ]]
  then
    rm -rf ${grok_data} && mkdir -p ${grok_data}
  else
    juju-log "preserving ${grok_data} on charm-upgrade"
  fi

  if [[ "$(basename $0)" != "upgrade-charm" ]]
  then
    rm -rf ${grok_etc} && mkdir -p ${grok_etc}
  else
    juju-log "preserving ${grok_etc} on charm-upgrade"
  fi

  juju-log "Deploying opengrok war to servlet root"
  # deploy script scans for common servlets and had hardcoded paths
  # should you use tomcat7 this will probably not work.
  cd /opt/opengrok/bin && ./OpenGrok deploy

  # workaround the history index heap OOM bug by regenerating the
  # config file without these directives, call this function everytime
  # a new project is added to ${grok_src}
  opengrok_update_project_configuration

  opengrok_install_upstart_index_job

  # The cron job runs the upstart job synchronously
  opengrok_install_cronjob

}

start_opengrok() {
  juju-log "Starting opengrok service"
  service status tomcat6 || service tomcat6 start
  open-port 8080/tcp
}

stop_opengrok() {
  juju-log "Stopping opengrok service"
  service tomcat6 stop
  close-port 8080/tcp
}

restart_opengrok() {
  # This is a bit overkill, but it doesn't hurt either
  juju-log "Restarting opengrok service"
  service tomcat6 status && service tomcat6 restart || service tomcat6 start
}

configure_opengrok() {
  # Can only parse one at a time but you can call this multiple
  # times to incrementally build up your source repos
  local og_content=$(config-get og-content)

  # shared definitions
  . inc/common

  if echo ${og_content} | grep -q ^lp:; then
    local repo_name=$(echo ${og_content} | perl -ne '@F = split(":",$_); print("$F[-1]");')
  else
    juju-log "No lp branch provided, failing safe"
    return 0
  fi

  # Need to handle slashified repo names
  if echo ${og_content} | grep -q '/'; then
    repo_name=$(echo ${og_content} | perl -ne '@F = split("/",$_); print("$F[-1]");')
  fi

  if [ -d "${grok_src}/${repo_name}" ]; then
    # XXX config option to always overwrite
    juju-log "Updating existing branch ${og_content}"
    cd "${grok_src}/${repo_name}" && bzr update
  else
    juju-log "Checking out new branch ${og_content}"
    bzr branch ${og_content} "${grok_src}/${repo_name}"
  fi

  # update config and update index

  juju-log "Initiate asynchronous index build"
  initctl emit --no-wait opengrok-index
}

# Actual processing
COMMAND=$(basename $0)

case $COMMAND in
  install)
    [[ -d /usr/share/tomcat6 ]] || install_tomcat6
    compile_templates
    install_opengrok
    restart_opengrok
    juju-log "Opengrok installed, expose service and visit http://HOSTIP:8080/source"
    ;;
  start)
    start_opengrok
    ;;
  stop)
    stop_opengrok
    ;;
  config-changed)
    configure_opengrok
    ;;
  upgrade-charm)
    compile_templates
    install_opengrok
    restart_opengrok 
    juju-log "Opengrok upgraded"
    ;;
  website-relation-joined)
    relation-set port=8080 hostname=`unit-get private-address`
    ;;
  *)
    juju-log "Command not recognized"
esac

exit 0
